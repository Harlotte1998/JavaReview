package HeiMa;

import java.util.Map;

/**
 * @Author Miracle Liuce
 * @Date 2021/10/25 19:57
 * @Version 1.0

0案例:不死神兔
需求:有一对兔子,从出生后第3个月起每个月都生-对兔子，
小兔子长到第三个月后每个月又生- -对兔子,
假如兔子都不死，问第二十个月的兔子对数为多少?

 1

 1+2

 1+2+4

 1+2+4+8

 1+2+4+8+16

找规律:
    第一个月: 1
    第二个月: 1
    第三个月: 2
    第四个月: 3
    第五个月: 5
    ...
    数据连起来: 1,1,2,3,5,8,13,21,44,,,,
    找规律    第三个数据是前两个数据之和

    规律:
        从第三个数据开始，每一个数据是前两个数据之和。
        第1个，第2个数据是已知的。

    用数组模拟:
        arr[0]= 1;
        arr[1]= 0+1;
        arr[2]= arr[0] + arr[1];
        arr[3]= arr[1] + arr[2];

    思路:
        ①为了存储多个月的兔子对数，定义一个数组，用动态初始化完成数组元素的初始化，
            长度为20
        ②因为第1个月，第2个月兔子的对数是已知的，
            都是1,所以数组的第1个元素，第2个元素值也都是1
        ③用循环实现计算每个月的兔子对数



 */

public class a092_BuSiShenTu {
    public static void main(String[] args) {
        //为了存储多个月的兔子对数，定义-个数组，用动态初始化完成数组元素的初始化，长度为20
        int[] arr=new int [20];
        //因为第1个月，第2个月兔子的对数是已知的，都是1，所以数组的第1个元素，第2个元素值也都是1
        arr[0]=1;
        arr[1]=1;

        //用循环实现计算每个月的兔子对数
        for (int i=2;i<20;i++ ){
            arr[i]=arr[i-1]+arr[i-2];

            System.out.println(arr[i]);



        }
        //输出数组中最后一-个元素的值， 就是第20个月的兔子对数
        System.out.println("第20个月的兔子对数"+arr[19]);



    }
}
